from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

from StatusFilter import StatusFilter
from MessageLog import MessageInConsole
from sql.SearchUserInformation import SearchAny
from sql.UpdateUserInformation import UpdateAny
from aiogram import Router
from AnyMiddleware import AnyMiddleware

router = Router()
router.message.middleware(AnyMiddleware())


@router.message(F.text.contains("–ë–µ–∑ –∑–Ω–∞—á–∫–æ–≤"), StatusFilter("7"))
async def Input1(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "emojiID", "0")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ß—ë—Ä–Ω—ã–π –º–∏–Ω–∏–º–∞–ª–∏–∑–º"), StatusFilter("7"))
async def Input2(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "emojiID", "1")
    await message.answer("–í–∞—à–∞ –ø–æ–¥–≥—Ä—É–ø–ø–∞: 2")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–Ø—Ä–∫–∞—è –∂–∏–∑–Ω—å"), StatusFilter("7"))
async def Input3(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "emojiID", "2")
    await message.answer("–í–∞—à–∞ –ø–æ–¥–≥—Ä—É–ø–ø–∞: 3")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ù–∞–∑–∞–¥"), StatusFilter("7"))
async def InputBack(message: Message):
    MessageInConsole(message)
    from structures.Setting3 import Output3
    await Output3(message)


async def Output7(message: Message):
    emojiList = list()
    userID = message.chat.id
    emojiID = int(SearchAny(userID, "userOfSetting", "emojiID"))
    emojiList.append(('', 'üîô ', '‚Ü™Ô∏è ')[emojiID])
    if SearchAny(userID, "historySetting", "status7") == '0':
        sep = "-------------------------------------------------------\n"
        text = ("   [<b>–í—ã–±–æ—Ä —Å—Ç–∏–ª—è –∑–Ω–∞—á–∫–æ–≤!</b>]\n   –û! –ó–¥–µ—Å—å –º–æ–∂–Ω–æ <b>–≤—ã–±—Ä–∞—Ç—å —Å—Ç–∏–ª—å –∑–Ω–∞—á–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö</b>. "
                "–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —Å—Ç–æ–∏—Ç —Å—Ç–∏–ª—å \"[üîπ<u>–Ø—Ä–∫–∞—è –∂–∏–∑–Ω—å</u>üîπ]\". –¢–∞–∫ —á—Ç–æ –µ—Å–ª–∏ <i>–í–∞–º</i> –Ω–∞–¥–æ–µ–ª —Å—Ç–∏–ª—å, "
                "–≤—Å–µ–≥–¥–∞ –º–æ–∂–Ω–æ –µ–≥–æ –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ –¥—Ä—É–≥–æ–π.\n")
        await message.answer(sep + text + sep)
        stickerList = ("CAACAgIAAxkBAAEGelJmfYH03dS23KkecTYXL-XjqPkxAwACDQADwDZPE6T54fTUeI1TNQQ",
                       "CAACAgIAAxkBAAEJq7xnJQuAzVeyWcF-B4wt2ZcpAvpO8gACHQcAAg8wCEqnw4xYP4fWQDYE",
                       "CAACAgIAAxkBAAEGelJmfYH03dS23KkecTYXL-XjqPkxAwACDQADwDZPE6T54fTUeI1TNQQ")
        await message.answer_sticker(stickerList[emojiID])
        UpdateAny(userID, "historySetting", "status7", "1")
    kb = [
        [KeyboardButton(text="[–ë–µ–∑ –∑–Ω–∞—á–∫–æ–≤]")],
        [KeyboardButton(text="[‚úñÔ∏è–ß—ë—Ä–Ω—ã–π –º–∏–Ω–∏–º–∞–ª–∏–∑–º‚úñÔ∏è]")],
        [KeyboardButton(text="[üîπ–Ø—Ä–∫–∞—è –∂–∏–∑–Ω—åüîπ]")],
        [KeyboardButton(text=f"{emojiList[0]}–ù–∞–∑–∞–¥")]
    ]
    placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:"
    Keys = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder=placeholder)
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ–π —Å—Ç–∏–ª—å:", reply_markup=Keys)
    UpdateAny(message.chat.id, "userOfSetting", "status", "7")
