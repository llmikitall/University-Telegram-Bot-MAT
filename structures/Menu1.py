from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

from AnyMiddleware import AnyMiddleware
from sql.UpdateUserInformation import UpdateAny
from sql.SearchUserInformation import SearchAny
from StatusFilter import StatusFilter
from MessageLog import MessageInConsole
from aiogram import Router

router = Router()
router.message.middleware(AnyMiddleware())


@router.message(F.text.contains("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"), StatusFilter("1"))
async def InputSchedule(message: Message):
    MessageInConsole(message)
    from structures.EnterDate2 import Output2
    await Output2(message)


@router.message(F.text.contains("–ù–∞—Å—Ç—Ä–æ–π–∫–∏"), StatusFilter("1"))
async def InputSetting(message: Message):
    MessageInConsole(message)
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É:"), StatusFilter("1"))
async def InputChangeGroup(message: Message):
    MessageInConsole(message)
    from structures.EnterGroup0 import Output0
    await Output0(message)


@router.message(F.text.contains("–§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤"), StatusFilter("1"))
async def InputAboutBot(message: Message):
    MessageInConsole(message)
    from structures.EnterLesson5 import Output5
    await Output5(message)


@router.message(F.text.contains("–ü–æ–∏—Å–∫"), StatusFilter("1"))
async def InputAboutBot(message: Message):
    MessageInConsole(message)
    from structures.EnterTeacher11 import Output11
    await Output11(message)


async def Output1(message: Message):
    userID = message.chat.id
    emojiID = int(SearchAny(userID, "userOfSetting", "emojiID"))
    userGroup = SearchAny(userID, "userOfSetting", "class")
    emojiList = list()
    emojiList.append(('', '‚úñÔ∏è', 'üï£ ')[emojiID])
    emojiList.append(('', '‚úñÔ∏è', ' üïì')[emojiID])
    emojiList.append(('', '‚ûñ', '‚öôÔ∏è ')[emojiID])
    emojiList.append(('', '‚ûñ', '‚≠ï ')[emojiID])
    emojiList.append(('', 'üîò', 'üë• ')[emojiID])

    if SearchAny(userID, "historySetting", "status1") == '0':
        sep = "-------------------------------------------------------\n"
        text = ("   [<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é!</b>]\n   –ó–¥–µ—Å—å <i>–í—ã</i> –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ "
                "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ. –ò–∑ –Ω–æ–≤–æ–≥–æ, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é <i>–í–∞–º</i> –∫–Ω–æ–ø–∫–∏ <u><b>\"–§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤\"</b></u> –∏ "
                "<u><b>\"–ü–æ–∏—Å–∫\"</b></u>. "
                "–°–æ–≤–µ—Ç—É—é –ø–æ—Å–µ—Ç–∏—Ç—å –∫–∞–∂–¥—É—é –∏–∑ —ç—Ç–∏—Ö –∫–Ω–æ–ø–æ–∫. –ò –æ—Å–æ–±–µ–Ω–Ω–æ <u><i>—Ä–µ–∫–æ–º–µ–Ω–¥—É—é</i></u> –∑–∞–π—Ç–∏ –≤ "
                "<u><b>\"–ù–∞—Å—Ç—Ä–æ–π–∫–∏\"</b></u>! "
                "–¢–∞–º –∫—Ä–∞–π–Ω–µ –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –≤–µ—â–µ–π!\n")
        await message.answer(sep + text + sep)
        stickerList = ("CAACAgIAAxkBAAEIhj1m6CVwvKZ0K1-DMbLzXOmjRt04BAACGwADwDZPE329ioPLRE1qNgQ",
                      "CAACAgIAAxkBAAEJq6xnJQkRh9MUriO6ZRJvJxkOTZ07SgACPAgAAkgVAUtpJ4GNIiLZSTYE",
                      "CAACAgIAAxkBAAEIhj1m6CVwvKZ0K1-DMbLzXOmjRt04BAACGwADwDZPE329ioPLRE1qNgQ")
        await message.answer_sticker(stickerList[emojiID])
        UpdateAny(userID, "historySetting", "status1", "1")

    kb = [
        [KeyboardButton(text=f"{emojiList[0]}–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ{emojiList[1]}")],
        [KeyboardButton(text=f"{emojiList[3]}–§–∞–∫—É–ª—å—Ç–∞—Ç–∏–≤"), KeyboardButton(text=f"{emojiList[3]}–ü–æ–∏—Å–∫")],
        [KeyboardButton(text=f"{emojiList[2]}–ù–∞—Å—Ç—Ä–æ–π–∫–∏")],
        [KeyboardButton(text=f"{emojiList[4]}–ü–æ–º–µ–Ω—è—Ç—å –≥—Ä—É–ø–ø—É: {userGroup}")]
    ]
    placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:"
    Keys = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder=placeholder)
    await message.answer("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=Keys)
    UpdateAny(userID, "userOfSetting", "status", "1")



