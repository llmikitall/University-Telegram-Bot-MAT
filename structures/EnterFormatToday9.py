from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

from StatusFilter import StatusFilter
from MessageLog import MessageInConsole
from sql.SearchUserInformation import SearchAny
from sql.UpdateUserInformation import UpdateAny
from aiogram import Router
from AnyMiddleware import AnyMiddleware

router = Router()
router.message.middleware(AnyMiddleware())


@router.message(F.text.contains("–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ"), StatusFilter("9"))
async def Input1(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "formatToday", "0")
    await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–°–µ–≥–æ–¥–Ω—è/–ó–∞–≤—Ç—Ä–∞"), StatusFilter("9"))
async def Input2(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "formatToday", "1")
    await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ù–∞–∑–∞–¥"), StatusFilter("9"))
async def InputBack(message: Message):
    MessageInConsole(message)
    from structures.Setting3 import Output3
    await Output3(message)


async def Output9(message: Message):
    emojiList = list()
    userID = message.chat.id
    emojiID = int(SearchAny(userID, "userOfSetting", "emojiID"))
    emojiList.append(('', 'üîô ', '‚Ü™Ô∏è ')[emojiID])
    if SearchAny(userID, "historySetting", "status9") == '0':
        sep = "-------------------------------------------------------\n"
        text = ("   [<b>–§–æ—Ä–º–∞—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è</b>]\n   –≠—Ç–æ –≤–∏–∑—É–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞. –ö–æ–≥–¥–∞ <i>–í—ã</i> "
                "–≤—ã–±—Ä–∞–ª–∏ <b>\"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\"</b>, —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –¥–µ–Ω—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ <b>\"–°–µ–≥–æ–¥–Ω—è\"</b>, "
                "–∑–∞–≤—Ç—Ä–∞—à–Ω–∏–π - <b>\"–ó–∞–≤—Ç—Ä–∞\"</b>. <i>(–ù–∞—Å—Ç—Ä–æ–π–∫–∞ \"[–°–µ–≥–æ–¥–Ω—è/–ó–∞–≤—Ç—Ä–∞]\")</i>\n"
                "   <b>–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ</b> - —ç—Ç–æ –≤–º–µ—Å—Ç–æ –Ω–∞–¥–ø–∏—Å–µ–π –≤—ã—à–µ –±—É–¥—É—Ç –¥–∞—Ç—ã.\n")
        await message.answer(sep + text + sep)
        stickerList = ("CAACAgIAAxkBAAEIhnhm6Cva-pfDCe4YbqnD_s2qbVl_bgACGAADwDZPE9b6J7-cahj4NgQ",
                       "CAACAgIAAxkBAAEJq69nJQotLtbMZ0EeLsLGkITvOcjkCwAC1gYAAut-2Uiz43Y2AAEsGQY2BA",
                       "CAACAgIAAxkBAAEIhnhm6Cva-pfDCe4YbqnD_s2qbVl_bgACGAADwDZPE9b6J7-cahj4NgQ")
        await message.answer_sticker(stickerList[emojiID])
        UpdateAny(userID, "historySetting", "status9", "1")
    kb = [
        [KeyboardButton(text="[–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ]")],
        [KeyboardButton(text="[–°–µ–≥–æ–¥–Ω—è/–ó–∞–≤—Ç—Ä–∞]")],
        [KeyboardButton(text=f"{emojiList[0]}–ù–∞–∑–∞–¥")],
    ]
    placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:"
    Keys = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder=placeholder)
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è: ", reply_markup=Keys)
    UpdateAny(message.chat.id, "userOfSetting", "status", "9")
