from aiogram.types import Message, KeyboardButton, ReplyKeyboardMarkup
from aiogram import F

from StatusFilter import StatusFilter
from MessageLog import MessageInConsole
from sql.SearchUserInformation import SearchAny
from sql.UpdateUserInformation import UpdateAny
from aiogram import Router
from AnyMiddleware import AnyMiddleware

router = Router()
router.message.middleware(AnyMiddleware())


@router.message(F.text.contains("–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫/–í—Ç–æ—Ä–Ω–∏–∫"), StatusFilter("10"))
async def Input1(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "formatDate", "0")
    await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ü–ù. 11.03/–í–¢. 12.03"), StatusFilter("10"))
async def Input2(message: Message):
    MessageInConsole(message)
    UpdateAny(message.chat.id, "userOfSetting", "formatDate", "1")
    await message.answer("–ò–∑–º–µ–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã.")
    from structures.Setting3 import Output3
    await Output3(message)


@router.message(F.text.contains("–ù–∞–∑–∞–¥"), StatusFilter("10"))
async def InputBack(message: Message):
    MessageInConsole(message)
    from structures.Setting3 import Output3
    await Output3(message)


async def Output10(message: Message):
    emojiList = list()
    userID = message.chat.id
    emojiID = int(SearchAny(userID, "userOfSetting", "emojiID"))
    emojiList.append(('', 'üîô ', '‚Ü™Ô∏è ')[emojiID])

    kb = [
        [KeyboardButton(text="[–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫/–í—Ç–æ—Ä–Ω–∏–∫]")],
        [KeyboardButton(text="[–ü–ù. 11.03/–í–¢. 12.03]")],
        [KeyboardButton(text=f"{emojiList[0]}–ù–∞–∑–∞–¥")],
    ]
    placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç:"
    Keys = ReplyKeyboardMarkup(keyboard=kb, resize_keyboard=True, input_field_placeholder=placeholder)
    if SearchAny(userID, "historySetting", "status10") == '0':
        sep = "-------------------------------------------------------\n"
        text = ("   [<b>–§–æ—Ä–º–∞—Ç –¥–∞—Ç—ã</b>]\n   –≠—Ç–æ –≤–∏–∑—É–∞–ª—å–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞. –ö–æ–≥–¥–∞ <i>–í—ã</i> "
                "–≤—ã–±—Ä–∞–ª–∏ <b>\"–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ\"</b>, –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –ø–æ —Å—Ç–∏–ª—é: <i>[–î–ù. –î–î.–ú–ú]</i>, –≥–¥–µ "
                " <b>–î–ù</b> - <i>–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏</i>, <b>–î–î</b> - <i>–¥–µ–Ω—å (—á–∏—Å–ª–æ)</i>, <b>–ú–ú</b> - <i>–º–µ—Å—è—Ü (—á–∏—Å–ª–æ)</i>. "
                "<i>(–ù–∞—Å—Ç—Ä–æ–π–∫–∞: [–ü–ù. 11.03/–í–¢. 12.03])</i>\n"
                "   <b>[–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫/–í—Ç–æ—Ä–Ω–∏–∫]</b> - —ç—Ç–æ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –¥–Ω–µ–π –Ω–µ–¥–µ–ª–∏.\n")
        await message.answer(sep + text + sep)
        stickerList = ("CAACAgIAAxkBAAEIhnhm6Cva-pfDCe4YbqnD_s2qbVl_bgACGAADwDZPE9b6J7-cahj4NgQ",
                       "CAACAgIAAxkBAAEJq69nJQotLtbMZ0EeLsLGkITvOcjkCwAC1gYAAut-2Uiz43Y2AAEsGQY2BA",
                       "CAACAgIAAxkBAAEIhnhm6Cva-pfDCe4YbqnD_s2qbVl_bgACGAADwDZPE9b6J7-cahj4NgQ")
        await message.answer_sticker(stickerList[emojiID])
        UpdateAny(userID, "historySetting", "status10", "1")
    await message.answer(f"–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è: ", reply_markup=Keys)
    UpdateAny(message.chat.id, "userOfSetting", "status", "10")
